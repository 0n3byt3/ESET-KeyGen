name: Create Shadow Release

on:
  workflow_dispatch:
  
jobs:
  duplicate:
    runs-on: ubuntu-latest

    steps:
      - name: Get Latest Release
        id: get_latest_release
        run: |
          response=$(curl -s \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/latest")
          
          echo "$response" > release.json
          RELEASE_ID=$(jq -r '.id' release.json)
          RELEASE_TAG=$(jq -r '.tag_name' release.json)
          RELEASE_NAME=$(jq -r '.name' release.json)
          RELEASE_BODY=$(jq -r '.body' release.json)
          
          echo "release_id=$RELEASE_ID" >> $GITHUB_ENV
          echo "release_tag=$RELEASE_TAG" >> $GITHUB_ENV
          echo "release_name=$RELEASE_NAME" >> $GITHUB_ENV
          echo "release_body=$RELEASE_BODY" >> $GITHUB_ENV

      - name: Fetch Release Assets
        id: fetch_assets
        run: |
          ASSETS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/${{ env.release_id }}/assets" \
            | jq -r '.[] | "\(.id) \(.name) \(.browser_download_url)"')

          echo "$ASSETS" > assets_list.txt
          cat assets_list.txt

      - name: Create Release
        id: create_release
        run: |
          response=$(curl -s -X POST \
            -H "Authorization: token ${{ secrets.SECOND_ACCOUNT_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "tag_name": "'"${{ env.release_tag }}"'",
              "name": "'"${{ env.release_name }}"'",
              "body": "'"${{ env.release_body }}"'",
              "draft": false,
              "prerelease": false
            }' \
            https://api.github.com/repos/SECOND_ACCOUNT/PRIVATE_REPO/releases)

          echo "$response" > private_release.json
          PRIVATE_RELEASE_ID=$(jq -r '.id' private_release.json)
          echo "private_release_id=$PRIVATE_RELEASE_ID" >> $GITHUB_ENV

      - name: Download Assets
        run: |
          while read -r ASSET_ID ASSET_NAME ASSET_URL; do
            echo "Downloading $ASSET_NAME..."
            curl -L -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -o "$ASSET_NAME" "$ASSET_URL"
          done < assets_list.txt

      - name: Upload Assets
        run: |
          UPLOAD_URL=$(jq -r '.upload_url' private_release.json | sed 's/{?name,label}//')

          for FILE in *; do
            if [[ -f "$FILE" ]]; then
              echo "Uploading $FILE..."
              curl -X POST \
                -H "Authorization: token ${{ secrets.SECOND_ACCOUNT_TOKEN }}" \
                -H "Content-Type: application/octet-stream" \
                --data-binary @"$FILE" \
                "$UPLOAD_URL?name=$(basename "$FILE")"
            fi
          done
